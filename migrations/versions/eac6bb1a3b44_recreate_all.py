"""recreate all

Revision ID: eac6bb1a3b44
Revises: 
Create Date: 2025-07-30 15:46:32.839257

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'eac6bb1a3b44'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contact_messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('sent_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('site_name', sa.String(length=100), nullable=True),
    sa.Column('site_description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('maintenance_mode', sa.Boolean(), nullable=True),
    sa.Column('allow_registration', sa.Boolean(), nullable=True),
    sa.Column('auto_verify_users', sa.Boolean(), nullable=True),
    sa.Column('default_ban_duration_days', sa.Integer(), nullable=True),
    sa.Column('max_login_attempts', sa.Integer(), nullable=True),
    sa.Column('ban_duration_minutes', sa.Integer(), nullable=True),
    sa.Column('max_poem_length', sa.Integer(), nullable=True),
    sa.Column('post_interval_seconds', sa.Integer(), nullable=True),
    sa.Column('enable_likes', sa.Boolean(), nullable=True),
    sa.Column('enable_comments', sa.Boolean(), nullable=True),
    sa.Column('enable_saved', sa.Boolean(), nullable=True),
    sa.Column('enable_notifications', sa.Boolean(), nullable=True),
    sa.Column('enable_messages', sa.Boolean(), nullable=True),
    sa.Column('instagram_url', sa.String(length=255), nullable=True),
    sa.Column('twitter_url', sa.String(length=255), nullable=True),
    sa.Column('contact_email', sa.String(length=255), nullable=True),
    sa.Column('admin_panel_name', sa.String(length=100), nullable=True),
    sa.Column('dark_mode', sa.Boolean(), nullable=True),
    sa.Column('blocked_words', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('password', sa.String(length=128), nullable=False),
    sa.Column('first_name', sa.String(length=64), nullable=True),
    sa.Column('last_name', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('profile_image', sa.String(length=128), nullable=True),
    sa.Column('private', sa.Boolean(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.Column('verified', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('bans',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('banned_at', sa.DateTime(), nullable=True),
    sa.Column('duration_days', sa.Integer(), nullable=True),
    sa.Column('ends_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('blocks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('blocker', sa.String(length=64), nullable=False),
    sa.Column('blocked', sa.String(length=64), nullable=False),
    sa.Column('block_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['blocked'], ['users.username'], ),
    sa.ForeignKeyConstraint(['blocker'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('follow_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender_username', sa.String(length=100), nullable=False),
    sa.Column('receiver_username', sa.String(length=100), nullable=False),
    sa.Column('status', sa.String(length=20), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['receiver_username'], ['users.username'], ),
    sa.ForeignKeyConstraint(['sender_username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('followers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('followed_username', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['followed_username'], ['users.username'], ),
    sa.ForeignKeyConstraint(['username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('messages',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sender', sa.String(length=64), nullable=False),
    sa.Column('receiver', sa.String(length=64), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('file_path', sa.String(length=256), nullable=True),
    sa.Column('message_type', sa.String(length=32), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['receiver'], ['users.username'], ),
    sa.ForeignKeyConstraint(['sender'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('notifications',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('recipient', sa.String(length=64), nullable=False),
    sa.Column('sender', sa.String(length=64), nullable=True),
    sa.Column('type', sa.String(length=64), nullable=False),
    sa.Column('content', sa.Text(), nullable=True),
    sa.Column('is_read', sa.Boolean(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['recipient'], ['users.username'], ),
    sa.ForeignKeyConstraint(['sender'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('poems',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('text', sa.Text(), nullable=False),
    sa.Column('likes', sa.Integer(), nullable=True),
    sa.Column('views', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('likes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('poem_id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.ForeignKeyConstraint(['poem_id'], ['poems.id'], ),
    sa.ForeignKeyConstraint(['username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('message_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reporter', sa.String(length=64), nullable=False),
    sa.Column('reported_username', sa.String(length=64), nullable=False),
    sa.Column('message_id', sa.Integer(), nullable=True),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('report_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], ),
    sa.ForeignKeyConstraint(['reported_username'], ['users.username'], ),
    sa.ForeignKeyConstraint(['reporter'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('poem_id', sa.Integer(), nullable=False),
    sa.Column('reported_by', sa.String(length=64), nullable=False),
    sa.Column('reason', sa.Text(), nullable=True),
    sa.Column('report_date', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['poem_id'], ['poems.id'], ),
    sa.ForeignKeyConstraint(['reported_by'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('saved_poems',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('poem_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['poem_id'], ['poems.id'], ),
    sa.ForeignKeyConstraint(['username'], ['users.username'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('saved_poems')
    op.drop_table('reports')
    op.drop_table('message_reports')
    op.drop_table('likes')
    op.drop_table('poems')
    op.drop_table('notifications')
    op.drop_table('messages')
    op.drop_table('followers')
    op.drop_table('follow_requests')
    op.drop_table('blocks')
    op.drop_table('bans')
    op.drop_table('users')
    op.drop_table('settings')
    op.drop_table('contact_messages')
    # ### end Alembic commands ###
