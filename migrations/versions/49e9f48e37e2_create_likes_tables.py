"""create likes tables

Revision ID: 49e9f48e37e2
Revises: 7049f8cc0b7f
Create Date: 2025-09-11 13:22:17.220830

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '49e9f48e37e2'
down_revision = '7049f8cc0b7f'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('likes', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DateTime(), nullable=True))
        batch_op.alter_column('poem_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.drop_constraint(batch_op.f('likes_username_fkey'), type_='foreignkey')
        batch_op.drop_constraint(batch_op.f('likes_poem_id_fkey'), type_='foreignkey')
        batch_op.create_foreign_key(None, 'users', ['username'], ['username'], ondelete='CASCADE')
        batch_op.create_foreign_key(None, 'poems', ['poem_id'], ['id'], ondelete='CASCADE')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('likes', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.create_foreign_key(batch_op.f('likes_poem_id_fkey'), 'poems', ['poem_id'], ['id'])
        batch_op.create_foreign_key(batch_op.f('likes_username_fkey'), 'users', ['username'], ['username'])
        batch_op.alter_column('poem_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_column('created_at')

    # ### end Alembic commands ###
